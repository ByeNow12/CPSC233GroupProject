2019-03-13
Bugs
- calculatePawnMoves - may move 1 more square past end of board
- calculatePawnMoves - pawn allowed to move diagonally before it's in the position where it's allowed to

JUNIT TESTS
- in Board class - add setBoard method that takes specific 2D string to test edge cases
- check isValidMove
- check calculate[Piece]Move
- make moves outside of board
- make moves to try to take own king
- make moves for piece to take itself
- make moves to take own pieces
- set up certain board positions to check

Features
- Separate into Packages - GUI package and Text package
- GUI Menu - choose to play with computer/human
- start menu - Text of Graphics version, load or new game, human or computer opponent.
- end menu - who won, save score for leaderboard, play again option
- Labels that indicate whose turn it is, invalid moves, when game ends
- save state
- load state 


Tasks - do by Wednesday Morning
- HumanPlayers - Riley
- Draw - Carmen
- update UML diagram - Carmen
- GUIGame - Shavonne
- ClickHandle - Tom
- GameConfigClickHandle - Dany


Meeting Notes:
GUIGame – main class. Run this one.
Draw class – new class just for drawing
- draws chessboard
- draws ending screen – win/lose status. Play again

rename game class  - TextGame – only runs text version
AI class – extend ComputerPlayer
- AI class more “intelligent” computer player

Labels – at bottom to chessboard. Whose turn it is, invalid move explanation, etc.

all instance variables of token: String has been renamed to team: char

Save state – GameConfig – can load game back up
- separated by []

Maybe:
Break Piece class into each piece. Make piece class superclass.
Timer? - GameConfig retrieves time at beginning end






2019-03-11
Features
- reorganization of classes - do Wednesday - done 03-13
- indicate when king is in check
- timer for who takes longer to capture king (maybe)
- point system (maybe)
- move draw method from handle click class - done 03-13
- save state (load from last save)


2019-03-06
- way to highlight squares on board (clicking) - HandleCellClicked class - highlight possible moves
- 450*450 window size
- GUI - draw() - same as board but placing images in correct squares
- update game class. instead of drawing with text, draw with GUI
- Game class - allow user to choose between text and GUI
- GUI extends Game(maybe) - choose which one to instantiate

Assigned tasks:
- Finish checkmate method (Dany)
- Start HandleCellClicked class (Dany)
- Draw method for GUI - (waiting on Pieces, use placeholder) - Riley
- Update game method - Tom
- Finish pieces - Carmen
- square border - to highlight possible moves - Carmen
- update UML diagram - Carmen

Date: 2019-03-02

Updates:
- Fixed getAllValidMoves method in GameConfiguration class (Dany)
- Added a method to check if player is in check (Dany)
- Updated Game class to indicate which team's turn is is (Shavonne)
- Added print statement to indicate that the computer has made a move (Shavonne)
- updated calculatePawnMoves method in Piece class so that a pawn can move 1 or 2 spaces forward during its first turn (Carmen)
- created checssboad and pieces graphics (Carmen)

Assigned tasks:
- Finish checkmate method (Dany)
- Start HandleCellClicked class (Dany)
- Start GUI class (Shavonne)
- Edit graphics for piecees, create a copy of white pieces (Carmen)
- allow player to choose team colour (Carmen)



Date: 2019-02-25

Bugs:
- Fix queen - can't capture vertically - Riley
- Pawn cannot move 2 spaces at beginning - Carmen
- Castling needs to be implemented - Tom
- Promotion needs to implemented - Tom
- en passant needs to be implemented - Tom
- check for checkmate, draws, stalemates (game end conditions) - Dany

Features:
- Move draw method out of board class
- add 2 classes: HandleCellClicked class and GUIGame class
- Create graphics for pieces and board
- indicate which team is going for human vs human
- indication that computer made a move
- Let player choose team colour
