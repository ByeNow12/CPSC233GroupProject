2019-03-25

TASKS:
JUnit Test for TextGame - Tom
Check for privacy leaks - Dany(?)
Labels that indicate whose turn it is, invalid moves, when game ends displayed at bottom of board - Carmen
When King is in check - move to make king out of check - Tom - test for it
Get scoreboard working - Carmen
AI - get AI working - Riley
stalemates (game end conditions) - Tom
Package PNGS - Carmen
Javadoc everything (everyone go over methods you worked on) - everyone do their own
TextGame - needs to be fully functioning - account for incheck instead of actually checking king - Tom

NICE TO HAVE:
Castling needs to be implemented (if in check method works)
En passant needs to be implemented 



2019-03-13
Bugs
- calculatePawnMoves - may move 1 more square past end of board
- calculatePawnMoves - pawn allowed to move diagonally before it's in the position where it's allowed to

JUNIT TESTS
- in Board class - add setBoard method that takes specific 2D string to test edge cases
- check isValidMove
- check calculate[Piece]Move
- make moves outside of board
- make moves to try to take own king
- make moves for piece to take itself
- make moves to take own pieces
- set up certain board positions to check

all instance variables of token: String has been renamed to team: char

Save state – GameConfig – can load game back up
- separated by [] 

Features
- indicate when king is in check
- timer for who takes longer to capture king, GameConfig retrieves time at beginning end (maybe)
- point system (maybe)
- save state (load from last save)

Maybe
- Break Piece class into each piece. Make piece class superclass.
